{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","stock/stockMonitor.js"],"names":["App","of","stockMonitorResolver","stockMonitor","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","http","useStandardConfiguration","withBaseUrl","withInterceptor","request","console","log","method","url","response","status","container","registerInstance","start","then","setRoot","StockMonitor","activate","get","data","description"],"mappings":";;;;;;;;;;;;;;;;MAIaA,cAAAA,cADZ,8BAAO,0BAAQC,EAAR,4BAAP,iBAEC,aAAYC,oBAAZ,EAAkC;AAAA;;AAChC,SAAKC,YAAL,GAAqBD,sBAArB;AACD;;;;;;;;oBCPY;AACbE,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCYCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAED,QAAIC,OAAO,oCAAX;AACAA,SAAKZ,SAAL,CAAe,kBAAU;AACvBE,aACCW,wBADD,GAECC,WAFD,CAEa,6BAFb,EAGCC,eAHD,CAGiB;AACfC,eADe,mBACPA,QADO,EACE;AACfC,kBAAQC,GAAR,iBAA0BF,SAAQG,MAAlC,SAA4CH,SAAQI,GAApD;AACA,iBAAOJ,QAAP;AACD,SAJc;AAKfK,gBALe,oBAKNA,SALM,EAKI;AACjBJ,kBAAQC,GAAR,eAAwBG,UAASC,MAAjC,SAA2CD,UAASD,GAApD;AACD;AAPc,OAHjB;AAYD,KAbD;;AAeAd,YAAQiB,SAAR,CAAkBC,gBAAlB,iCAA+CZ,IAA/C;;AAEAN,YAAQmB,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMpB,QAAQqB,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UC5Ce3B,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCEY0B,uBAAAA,uBADZ;AAEG,8BAAahB,IAAb,EAAmB;AAAA;;AACf,iBAAKA,IAAL,GAAYA,IAAZ;AACH;;+BAEDiB,+BAAW;AACX,mBAAO,KAAKjB,IAAL,CAAUkB,GAAV,CAAc,OAAd,EAAuBJ,IAAvB,CAA4B,gBAAQ;AACvCT,wBAAQC,GAAR,CAAYa,KAAKC,WAAjB;AACH,aAFM,CAAP;AAGD","file":"app-bundle.js","sourcesContent":["import {inject, Factory} from 'aurelia-framework';\nimport {StockMonitor} from './stock/stockMonitor';\n\n@inject(Factory.of(StockMonitor))\nexport class App {\n  constructor(stockMonitorResolver) {\n    this.stockMonitor =  stockMonitorResolver();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  let http = new HttpClient();\n  http.configure(config => {\n    config\n    .useStandardConfiguration()\n    .withBaseUrl('http://localhost:64089/api/')\n    .withInterceptor({\n      request(request) {\n        console.log(`Requesting ${request.method} ${request.url}`);\n        return request;\n      },\n      response(response) {\n        console.log(`Received ${response.status} ${response.url}`);\n      }\n    });\n  });\n\n  aurelia.container.registerInstance(HttpClient, http);\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject, Factory} from 'aurelia-dependency-injection';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class StockMonitor {\r\n    constructor (http) {\r\n        this.http = http;\r\n    }\r\n\r\n    activate() {\r\n    return this.http.get('stock').then(data => {\r\n        console.log(data.description)\r\n    });\r\n  }\r\n}"],"sourceRoot":"../src"}