{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","order/editOrder.js","order/orderList.js","order/personNeedList.js","stock/editStock.js","stock/stockMonitor.js","resources/value-converters/date-format.js","resources/value-converters/filter.js","resources/events/UpdateDataEvent.js"],"names":["App","of","stockMonitorResolver","orderListResolver","editOrderResolver","editStockResolver","eventAggregator","stockMonitor","orderList","isEditingOrder","isEditingStock","updateOrderList","openOrder","id","editOrder","createOrder","closeOrder","modifyStock","editStock","closeOverlay","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","http","useStandardConfiguration","withBaseUrl","container","registerInstance","start","then","setRoot","EditOrder","personNeedsResolver","app","orderId","personNeeds","availability","subscribe","updateOrder","checkOrderAvailability","attached","fetch","response","json","order","data","saveOrder","actionUrl","headers","dataType","method","body","JSON","stringify","Id","publish","deleteOrder","closeThisOrder","markAsReady","processionError","OrderList","orders","filterFunc","searchExpression","orderItem","itemCamp","Camp","toUpperCase","itemReference","ReferenceCode","itemReceiverName","ReceiverName","itemState","State","searchParts","split","foundSearchParts","forEach","searchPart","indexOf","push","length","containsString","source","searchString","PersonNeedList","shoeSizes","getShoeSizes","clothSizes","updateNeedsList","needs","addNeed","Object","Gender","saveNeed","need","address","deleteNeed","end","sizes","i","EditStock","originalStockMonitor","typeOfGood","shoeSize","clothSize","gender","amount","addToStock","removeFromStock","url","StockMonitor","stockFilter","test","updateList","stockInfos","stockItem","itemType","Type","itemGender","itemAltType","itemManWoman","itemBoyGirl","itemSize","ShoeSize","ClothSize","DateFormatValueConverter","toView","value","format","FilterValueConverter","array","searchTerm","undefined","trim","filter","item","matches","UpdateDataEvent"],"mappings":";;;;;;;;;;;;;;;;QAUaA,cAAAA,cADZ,8BAAO,0BAAQC,EAAR,4BAAP,EAAiC,0BAAQA,EAAR,sBAAjC,EAAwD,0BAAQA,EAAR,sBAAxD,EAA+E,0BAAQA,EAAR,sBAA/E;AAEG,qBAAYC,oBAAZ,EAAkCC,iBAAlC,EAAqDC,iBAArD,EAAwEC,iBAAxE,EAA2FC,eAA3F,EAA4G;AAAA;;AACxG,iBAAKA,eAAL,GAAuBA,eAAvB;AACA,iBAAKC,YAAL,GAAoBL,sBAApB;AACA,iBAAKM,SAAL,GAAiBL,mBAAjB;AACA,iBAAKC,iBAAL,GAAyBA,iBAAzB;AACA,iBAAKC,iBAAL,GAAyBA,iBAAzB;AACA,iBAAKI,cAAL,GAAsB,KAAtB;AACA,iBAAKC,cAAL,GAAsB,KAAtB;AACH;;sBAKDC,6CAAkB;AACd,iBAAKH,SAAL,CAAeG,eAAf;AACH;;sBAEDC,+BAAUC,IAAI;AACV,iBAAKJ,cAAL,GAAsB,IAAtB;AACA,iBAAKK,SAAL,GAAiB,KAAKV,iBAAL,CAAuB,IAAvB,EAA6BS,EAA7B,EAAiC,KAAKL,SAAtC,CAAjB;AACH;;sBAEDO,qCAAc;AACV,iBAAKN,cAAL,GAAsB,IAAtB;AACA,iBAAKK,SAAL,GAAiB,KAAKV,iBAAL,CAAuB,IAAvB,EAA6B,CAA7B,EAAgC,KAAKI,SAArC,CAAjB;AACH;;sBAEDQ,mCAAa;AACT,iBAAKP,cAAL,GAAsB,KAAtB;AACA,iBAAKK,SAAL,GAAiB,IAAjB;AACH;;sBAEDG,qCAAc;AACV,iBAAKP,cAAL,GAAsB,IAAtB;AACA,iBAAKQ,SAAL,GAAiB,KAAKb,iBAAL,CAAuB,KAAKE,YAA5B,CAAjB;AACH;;sBAGDY,uCAAe;AACX,iBAAKT,cAAL,GAAsB,KAAtB;AACA,iBAAKQ,SAAL,GAAiB,IAAjB;AACH;;;;;;;;;;;oBCpDU;AACbE,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;YCaCC,YAAAA;;;;;;;;;;AAPhBC,YAAQC,MAAR,CAAe;AACXC,yBAAiB,sBAAYL,KADlB;AAEXM,kBAAU;AACNC,8BAAkB;AADZ;AAFC,KAAf;;AAOO,aAASL,SAAT,CAAmBM,OAAnB,EAA4B;AAC/BA,gBAAQC,GAAR,CACKC,qBADL,GAEKC,OAFL,CAEa,WAFb;;AAIA,YAAI,sBAAYX,KAAhB,EAAuB;AACnBQ,oBAAQC,GAAR,CAAYG,kBAAZ;AACH;;AAED,YAAI,sBAAYX,OAAhB,EAAyB;AACrBO,oBAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACH;;AAGD,YAAIC,OAAO,oCAAX;AACAA,aAAKZ,SAAL,CAAe,kBAAU;AACrBE,mBACKW,wBADL,GAICC,WAJD,CAIa,sDAJb;AAKH,SAND;;AAQAR,gBAAQS,SAAR,CAAkBC,gBAAlB,iCAA+CJ,IAA/C;;AAEAN,gBAAQW,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,mBAAMZ,QAAQa,OAAR,EAAN;AAAA,SAArB;AACH;;;;;;;;UCvCenB,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCOYkB,oBAAAA,oBADZ,iHAAoC,oCAAQzC,EAAR,gCAApC;AAEG,2BAAYiC,IAAZ,EAAkB5B,eAAlB,EAAmCqC,mBAAnC,EAAwDC,GAAxD,EAA6DC,OAA7D,EAAsErC,SAAtE,EAAiF;AAAA;;AAAA;;AAC7E,iBAAK0B,IAAL,GAAYA,IAAZ;AACA,iBAAK5B,eAAL,GAAuBA,eAAvB;AACA,iBAAKsC,GAAL,GAAWA,GAAX;AACA,iBAAKC,OAAL,GAAeA,OAAf;AACA,iBAAKrC,SAAL,GAAiBA,SAAjB;AACA,iBAAKsC,WAAL,GAAmBH,oBAAoBE,OAApB,EAA6B,IAA7B,CAAnB;AACA,iBAAKE,YAAL,GAAoB,YAApB;AACA,iBAAKzC,eAAL,CAAqB0C,SAArB,mCAAgD,YAAM;AAClD,sBAAKC,WAAL;AACA,sBAAKC,sBAAL;AACH,aAHD;AAIH;;4BAEDC,+BAAW;AACP,iBAAKF,WAAL;AACA,iBAAKC,sBAAL;AACH;;4BAIDD,qCAAc;AAAA;;AACV,gBAAI,KAAKJ,OAAL,KAAiB,CAArB,EAAwB;AACpB,qBAAKX,IAAL,CAAUkB,KAAV,CAAgB,WAAW,KAAKP,OAAhC,EACKL,IADL,CACU;AAAA,2BAAYa,SAASC,IAAT,EAAZ;AAAA,iBADV,EAEKd,IAFL,CAEU,gBAAQ;AACV,2BAAKe,KAAL,GAAaC,IAAb;AACH,iBAJL;AAKH;AACJ;;4BAEDN,2DAAyB;AAAA;;AACrB,gBAAI,KAAKL,OAAL,KAAiB,CAArB,EAAwB;AACpB,qBAAKX,IAAL,CAAUkB,KAAV,CAAgB,6BAA6B,KAAKP,OAAlD,EACKL,IADL,CACU;AAAA,2BAAYa,SAASC,IAAT,EAAZ;AAAA,iBADV,EAEKd,IAFL,CAEU,gBAAQ;AACV,wBAAIgB,SAAS,IAAb,EAAmB;AACf,+BAAKT,YAAL,GAAoB,WAApB;AACH,qBAFD,MAEO;AACH,+BAAKA,YAAL,GAAoB,eAApB;AACH;AACJ,iBARL;AASH;AACJ;;4BAEDU,iCAAY;AAAA;;AACR,gBAAIC,SAAJ;AACA,gBAAI,KAAKb,OAAL,KAAiB,CAArB,EAAwB;AACpBa,4BAAY,cAAZ;AACH,aAFD,MAEO;AACHA,4BAAY,cAAZ;AACH;;AAED,iBAAKxB,IAAL,CAAUkB,KAAV,CAAgBM,SAAhB,EAA2B;AACnBC,yBAAS;AACL,8BAAU,kBADL;AAEL,oCAAgB;AAFX,iBADU;AAKnBC,0BAAU,MALS;AAMnBC,wBAAQ,MANW;AAOnBC,sBAAMC,KAAKC,SAAL,CAAe,KAAKT,KAApB;AAPa,aAA3B,EASKf,IATL,CASU;AAAA,uBAAYa,SAASC,IAAT,EAAZ;AAAA,aATV,EAUKd,IAVL,CAUU,gBAAQ;AACV,uBAAKe,KAAL,GAAaC,IAAb;AACA,uBAAKX,OAAL,GAAeW,KAAKS,EAApB;AACA,uBAAKnB,WAAL,CAAiBD,OAAjB,GAA2BW,KAAKS,EAAhC;AACA,uBAAK3D,eAAL,CAAqB4D,OAArB,CAA6B,sCAA7B;AACH,aAfL;AAiBH;;4BAEDC,qCAAc;AAAA;;AACV,iBAAKjC,IAAL,CAAUkB,KAAV,CAAgB,kBAAkB,KAAKP,OAAvC,EAAgD;AACxCgB,wBAAQ;AADgC,aAAhD,EAGKrB,IAHL,CAGU,YAAM;AACR,uBAAKI,GAAL,CAAS5B,UAAT;AACA,uBAAKV,eAAL,CAAqB4D,OAArB,CAA6B,sCAA7B;AACH,aANL;AAOH;;4BAEDE,2CAAiB;AAAA;;AACb,iBAAKlC,IAAL,CAAUkB,KAAV,CAAgB,iBAAiB,KAAKP,OAAtC,EACKL,IADL,CACU,YAAM;AACR,uBAAKI,GAAL,CAAS5B,UAAT;AACA,uBAAKV,eAAL,CAAqB4D,OAArB,CAA6B,sCAA7B;AACH,aAJL;AAKH;;4BAEDG,qCAAc;AAAA;;AACV,iBAAKnC,IAAL,CAAUkB,KAAV,CAAgB,eAAe,KAAKP,OAApC,EACKL,IADL,CACU;AAAA,uBAAYa,SAASC,IAAT,EAAZ;AAAA,aADV,EAEKd,IAFL,CAEU,gBAAQ;AACV,oBAAIgB,SAAS,IAAb,EAAmB;AACf,2BAAKc,eAAL,GAAuBd,IAAvB;AACH,iBAFD,MAEO;AACH,2BAAKlD,eAAL,CAAqB4D,OAArB,CAA6B,sCAA7B;AACH;AACJ,aARL;AASH;;;;;;;;;;;;;;;;;;;;;QCvGQK,oBAAAA,oBADZ;AAEG,2BAAYrC,IAAZ,EAAkB5B,eAAlB,EAAmC;AAAA;;AAAA;;AAC/B,iBAAK4B,IAAL,GAAYA,IAAZ;AACA,iBAAK5B,eAAL,GAAuBA,eAAvB;AACA,iBAAKA,eAAL,CAAqB0C,SAArB,mCAAgD,YAAM;AAClD,sBAAKrC,eAAL;AACH,aAFD;AAGH;;4BAEDA,6CAAkB;AAAA;;AACd,mBAAO,KAAKuB,IAAL,CAAUkB,KAAV,CAAgB,OAAhB,EACFZ,IADE,CACG;AAAA,uBAAYa,SAASC,IAAT,EAAZ;AAAA,aADH,EAEFd,IAFE,CAEG,gBAAQ;AACV,uBAAKgC,MAAL,GAAc,EAAd;AACA,uBAAKA,MAAL,GAAchB,IAAd;AACH,aALE,CAAP;AAMH;;4BAEDL,+BAAW;AACP,iBAAKxC,eAAL;AACH;;4BAED8D,iCAAWC,kBAAkBC,WAAW;;AAEpC,gBAAIC,WAAWD,UAAUE,IAAV,KAAmB,IAAnB,GAA0B,EAA1B,GAA+BF,UAAUE,IAAV,CAAeC,WAAf,EAA9C;AACA,gBAAIC,gBAAgBJ,UAAUK,aAAV,KAA4B,IAA5B,GAAmC,EAAnC,GAAwCL,UAAUK,aAAV,CAAwBF,WAAxB,EAA5D;AACA,gBAAIG,mBAAmBN,UAAUO,YAAV,KAA2B,IAA3B,GAAkC,EAAlC,GAAuCP,UAAUO,YAAV,CAAuBJ,WAAvB,EAA9D;AACA,gBAAIK,YAAYR,UAAUS,KAAV,KAAoB,IAApB,GAA2B,EAA3B,GAAgCT,UAAUS,KAAV,CAAgBN,WAAhB,EAAhD;;AAEAJ,+BAAmBA,iBAAiBI,WAAjB,EAAnB;AACA,gBAAIO,cAAcX,iBAAiBY,KAAjB,CAAuB,GAAvB,CAAlB;;AAEA,gBAAIC,mBAAmB,EAAvB;AACAF,wBAAYG,OAAZ,CAAoB,UAASC,UAAT,EAAqB;AACrC,oBAAIV,cAAcW,OAAd,CAAsBD,UAAtB,IAAoC,CAAC,CAAzC,EAA4C;AACxCF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFD,MAEO,IAAIb,SAASc,OAAT,CAAiBD,UAAjB,IAA+B,CAAC,CAApC,EAAuC;AAC1CF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFM,MAEA,IAAIR,iBAAiBS,OAAjB,CAAyBD,UAAzB,IAAuC,CAAC,CAA5C,EAA+C;AAClDF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFM,MAEA,IAAIN,UAAUO,OAAV,CAAkBD,UAAlB,IAAgC,CAAC,CAArC,EAAwC;AAC3CF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH;AACJ,aAVD,EAUG,IAVH;;AAaA,mBAAOJ,YAAYO,MAAZ,IAAsBL,iBAAiBK,MAA9C;AACH;;4BAEDC,yCAAeC,QAAQC,cAAc;AACjC,mBAAO,CAACD,SAAS,EAAV,EAAcJ,OAAd,CAAsBK,eAAe,EAArC,MAA6C,CAAC,CAArD;AACH;;;;;;;;;;;;;;;;;;;;;QCnDQC,yBAAAA,yBADZ;AAEG,gCAAY9D,IAAZ,EAAkB5B,eAAlB,EAAmCuC,OAAnC,EAA4C/B,SAA5C,EAAuD;AAAA;;AAAA;;AACnD,iBAAKA,SAAL,GAAiBA,SAAjB;AACA,iBAAKoB,IAAL,GAAYA,IAAZ;AACA,iBAAK5B,eAAL,GAAuBA,eAAvB;AACA,iBAAKuC,OAAL,GAAeA,OAAf;AACA,iBAAKoD,SAAL,GAAiB,KAAKC,YAAL,CAAkB,EAAlB,EAAsB,EAAtB,CAAjB;AACA,iBAAKC,UAAL,GAAkB,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,CAAlB;AACA,iBAAK7F,eAAL,CAAqB0C,SAArB,mCAAgD,YAAM;AAClD,sBAAKoD,eAAL;AACH,aAFD;AAGH;;iCAEDjD,+BAAW;AACP,iBAAKiD,eAAL;AACH;;iCAGDA,6CAAkB;AAAA;;AACd,mBAAO,KAAKlE,IAAL,CAAUkB,KAAV,CAAgB,gBAAgB,KAAKP,OAArC,EACFL,IADE,CACG;AAAA,uBAAYa,SAASC,IAAT,EAAZ;AAAA,aADH,EAEFd,IAFE,CAEG,gBAAQ;AACV,uBAAK6D,KAAL,GAAa,EAAb;AACA,uBAAKA,KAAL,GAAa7C,IAAb;AACH,aALE,CAAP;AAMH;;iCAED8C,6BAAU;AACN,gBAAI,KAAKD,KAAL,CAAWT,MAAX,GAAoB,CAAxB,EAA2B;AACvB,qBAAKS,KAAL,CAAWV,IAAX,CAAgB,IAAIY,MAAJ,CAAW;AACvBtC,wBAAI,CADmB;AAEvBuC,4BAAQ;AAFe,iBAAX,CAAhB;AAIH;AACJ;;iCAIDC,6BAASC,MAAM;AAAA;;AACX,gBAAIC,UAAU,EAAd;AACA,gBAAID,KAAKzC,EAAL,KAAY,CAAhB,EAAmB;AACf0C,0BAAU,iBAAiB,KAAK9D,OAAhC;AACH,aAFD,MAEO;AACH8D,0BAAU,aAAV;AACH;;AAED,iBAAKzE,IAAL,CAAUkB,KAAV,CAAgBuD,OAAhB,EAAyB;AACjBhD,yBAAS;AACL,8BAAU,kBADL;AAEL,oCAAgB;AAFX,iBADQ;AAKjBC,0BAAU,MALO;AAMjBC,wBAAQ,MANS;AAOjBC,sBAAMC,KAAKC,SAAL,CAAe0C,IAAf;AAPW,aAAzB,EASKlE,IATL,CASU;AAAA,uBAAYa,SAASC,IAAT,EAAZ;AAAA,aATV,EAUKd,IAVL,CAUU,YAAM;AACR,uBAAKlC,eAAL,CAAqB4D,OAArB,CAA6B,sCAA7B;AACH,aAZL;AAaH;;iCAED0C,iCAAWF,MAAM;AAAA;;AACb,iBAAKxE,IAAL,CAAUkB,KAAV,CAAgB,iBAAiBsD,KAAKzC,EAAtC,EAA0C;AACtCJ,wBAAQ;AAD8B,aAA1C,EAEGrB,IAFH,CAEQ,YAAM;AACV,uBAAK4D,eAAL;AACH,aAJD;AAKH;;iCAEDF,qCAAa3D,OAAOsE,KAAK;AACrB,gBAAIC,QAAQ,EAAZ;AACA,iBAAK,IAAIC,IAAIxE,KAAb,EAAoBwE,IAAIF,GAAxB,EAA6BE,GAA7B,EAAkC;AAC9BD,sBAAMnB,IAAN,CAAWoB,CAAX;AACH;AACD,mBAAOD,KAAP;AACH;;;;;;;;;;;;;;;;;;;;;QC1EQE,oBAAAA,oBADZ,uGAAoC,0BAAQ/G,EAAR,4BAApC;AAEG,2BAAYiC,IAAZ,EAAkB5B,eAAlB,EAAmCJ,oBAAnC,EAAyD+G,oBAAzD,EAA+E;AAAA;;AAC3E,iBAAK/E,IAAL,GAAYA,IAAZ;AACA,iBAAK5B,eAAL,GAAuBA,eAAvB;AACA,iBAAK2G,oBAAL,GAA4BA,oBAA5B;AACA,iBAAK1G,YAAL,GAAoBL,sBAApB;AACA,iBAAK+F,SAAL,GAAiB,KAAKC,YAAL,CAAkB,EAAlB,EAAsB,EAAtB,CAAjB;AACA,iBAAKC,UAAL,GAAkB,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,CAAlB;AACA,iBAAKe,UAAL,GAAkB,OAAlB;AACA,iBAAKC,QAAL,GAAgB,CAAhB;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACA,iBAAKC,MAAL,GAAc,MAAd;AACA,iBAAKC,MAAL,GAAc,CAAd;AAEH;;4BAEDtG,mCAAa;AACT,iBAAKP,cAAL,GAAsB,KAAtB;AACA,iBAAKK,SAAL,GAAiB,IAAjB;AACH;;4BAEDoF,qCAAa3D,OAAOsE,KAAK;AACrB,gBAAIC,QAAQ,EAAZ;AACA,iBAAK,IAAIC,IAAIxE,KAAb,EAAoBwE,IAAIF,GAAxB,EAA6BE,GAA7B,EAAkC;AAC9BD,sBAAMnB,IAAN,CAAWoB,CAAX;AACH;AACD,mBAAOD,KAAP;AACH;;4BAEDS,mCAAa;AACT,iBAAKtG,WAAL,CAAiB,KAAKqG,MAAtB;AACH;;4BAEDE,6CAAkB;AACd,iBAAKvG,WAAL,CAAiB,CAAC,CAAD,GAAK,KAAKqG,MAA3B;AACH;;4BAEDrG,mCAAYqG,QAAQ;AAAA;;AAChB,gBAAIG,MAAM,kBACN,OADM,GACI,KAAKP,UADT,GACsB,GADtB,GAEN,SAFM,GAEMI,MAFN,GAEe,GAFf,GAGN,YAHM,GAGS,KAAKF,SAHd,GAG0B,GAH1B,GAIN,WAJM,GAIQ,KAAKD,QAJb,GAIwB,GAJxB,GAKN,SALM,GAKM,KAAKE,MALrB;;AAOA,iBAAKnF,IAAL,CAAUkB,KAAV,CAAgBqE,GAAhB,EAAqBjF,IAArB,CAA0B,YAAM;AAC5B,sBAAKlC,eAAL,CAAqB4D,OAArB,CAA6B,sCAA7B;AACH,aAFD;AAGH;;;;;;;;;;;;;;;;;;;;;QCjDQwD,uBAAAA,uBADZ;AAEG,8BAAYxF,IAAZ,EAAkB5B,eAAlB,EAAmC;AAAA;;AAAA;;AAC/B,iBAAKA,eAAL,GAAuBA,eAAvB;AACA,iBAAK4B,IAAL,GAAYA,IAAZ;AACA,iBAAKyF,WAAL,GAAmB,EAAnB;AACA,iBAAKC,IAAL,GAAY,EAAZ;AACA,iBAAKtH,eAAL,CAAqB0C,SAArB,mCAAgD,YAAM;AAClD,sBAAK6E,UAAL;AACH,aAFD;AAGH;;+BAED1E,+BAAW;AACP,iBAAK0E,UAAL;AACH;;+BAEDA,mCAAa;AAAA;;AACT,mBAAO,KAAK3F,IAAL,CAAUkB,KAAV,CAAgB,OAAhB,EACFZ,IADE,CACG;AAAA,uBAAYa,SAASC,IAAT,EAAZ;AAAA,aADH,EAEFd,IAFE,CAEG,gBAAQ;AACV,uBAAKsF,UAAL,GAAkBtE,IAAlB;AACH,aAJE,CAAP;AAKH;;+BAEDiB,iCAAWC,kBAAkBqD,WAAW;;AAEpC,gBAAIC,WAAWD,UAAUE,IAAV,CAAenD,WAAf,EAAf;AACA,gBAAIoD,aAAaH,UAAUvB,MAAV,CAAiB1B,WAAjB,EAAjB;AACA,gBAAIqD,oBAAJ;AACA,gBAAIC,qBAAJ;AACA,gBAAIC,oBAAJ;AACA,gBAAIC,iBAAJ;;AAEA,gBAAIN,aAAa,OAAjB,EAA0B;AACtBM,2BAAWP,UAAUQ,QAArB;AACAJ,8BAAc,MAAd;AACH,aAHD,MAGO,IAAIH,aAAa,SAAjB,EAA4B;AAC/BM,2BAAWP,UAAUS,SAAV,CAAoB1D,WAApB,EAAX;AACH;AACD,gBAAIkD,aAAa,OAAjB,EAA0B;AACtBG,8BAAc,MAAd;AACH;AACD,gBAAIH,aAAa,KAAjB,EAAwB;AACpBG,8BAAc,MAAd;AACH;AACD,gBAAIH,aAAa,QAAjB,EAA2B;AACvBG,8BAAc,SAAd;AACH;AACD,gBAAIH,aAAa,SAAjB,EAA4B;AACxBG,8BAAc,UAAd;AACH;;AAGD,gBAAID,eAAe,MAAnB,EAA2B;AACvBE,+BAAe,KAAf;AACAC,8BAAc,KAAd;AACH,aAHD,MAGO;AACHD,+BAAe,OAAf;AACAC,8BAAc,MAAd;AACH;;AAED3D,+BAAmBA,iBAAiBI,WAAjB,EAAnB;AACA,gBAAIO,cAAcX,iBAAiBY,KAAjB,CAAuB,GAAvB,CAAlB;;AAEA,gBAAIC,mBAAmB,EAAvB;AACAF,wBAAYG,OAAZ,CAAoB,UAASC,UAAT,EAAqB;AACrC,oBAAIuC,YAAYvC,UAAhB,EAA4B;AACxBF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFD,MAEO,IAAI0C,eAAe1C,UAAnB,EAA+B;AAClCF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFM,MAEA,IAAIyC,cAAczC,UAAlB,EAA8B;AACjCF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFM,MAEA,IAAI2C,gBAAgB3C,UAApB,EAAgC;AACnCF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFM,MAEA,IAAI4C,eAAe5C,UAAnB,EAA+B;AAClCF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFM,MAEA,IAAIuC,YAAY,OAAZ,IAAuBM,YAAY7C,UAAvC,EAAmD;AACtDF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH,iBAFM,MAEA,IAAIuC,aAAa,SAAb,IAA0BA,aAAa,OAAvC,IAAkD,CAACM,WAAW,EAAZ,EAAgB5C,OAAhB,CAAwBD,UAAxB,IAAsC,CAAC,CAA7F,EAAgG;AACnGF,qCAAiBI,IAAjB,CAAsBF,UAAtB;AACH;AACJ,aAhBD,EAgBG,IAhBH;;AAmBA,mBAAOJ,YAAYO,MAAZ,IAAsBL,iBAAiBK,MAA9C;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;QC1FQ6C,mCAAAA;;;;;2CACTC,yBAAOC,OAAO;AACV,mBAAO,sBAAOA,KAAP,EAAcC,MAAd,CAAqB,YAArB,CAAP;AACH;;;;;;;;;;;;;;;;;;QCLQC,+BAAAA;;;;;uCACTH,yBAAOI,OAAOC,YAAYtE,YAAY;AAClC,gBAAIqE,UAAUE,SAAd,EAAyB;AACrB,uBAAO,EAAP;AACH;AACD,gBAAID,eAAeC,SAAnB,EAA8B;AAC1B,uBAAOF,KAAP;AACH;;AAEDC,yBAAaA,WAAWE,IAAX,EAAb;;AAEA,mBAAOH,MAAMI,MAAN,CAAa,UAACC,IAAD,EAAU;AAC1B,oBAAIC,UAAUL,cAAcA,WAAWnD,MAAX,GAAoB,CAAlC,GAAsCnB,WAAWsE,UAAX,EAAuBI,IAAvB,CAAtC,GAAqE,IAAnF;AACA,uBAAOC,OAAP;AACH,aAHM,CAAP;AAIH;;;;;;;;;;;;;;;;;;QCfQC,0BAAAA,kBACT,2BAAc;AAAA;AAEb","file":"app-bundle.js","sourcesContent":["import { inject, Factory } from 'aurelia-framework';\nimport { StockMonitor } from './stock/stockMonitor';\nimport { OrderList } from './order/orderList';\nimport { EditOrder } from './order/editOrder';\nimport { EditStock } from './stock/editStock';\nimport { UpdateDataEvent } from './resources/events/UpdateDataEvent';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport 'whatwg-fetch';\n\n@inject(Factory.of(StockMonitor), Factory.of(OrderList), Factory.of(EditOrder), Factory.of(EditStock), EventAggregator)\nexport class App {\n    constructor(stockMonitorResolver, orderListResolver, editOrderResolver, editStockResolver, eventAggregator) {\n        this.eventAggregator = eventAggregator;\n        this.stockMonitor = stockMonitorResolver();\n        this.orderList = orderListResolver();\n        this.editOrderResolver = editOrderResolver;\n        this.editStockResolver = editStockResolver;\n        this.isEditingOrder = false;\n        this.isEditingStock = false;\n    }\n\n\n\n\n    updateOrderList() {\n        this.orderList.updateOrderList();\n    }\n\n    openOrder(id) {\n        this.isEditingOrder = true;\n        this.editOrder = this.editOrderResolver(this, id, this.orderList);\n    }\n\n    createOrder() {\n        this.isEditingOrder = true;\n        this.editOrder = this.editOrderResolver(this, 0, this.orderList);\n    }\n\n    closeOrder() {\n        this.isEditingOrder = false;\n        this.editOrder = null;\n    }\n\n    modifyStock() {\n        this.isEditingStock = true;\n        this.editStock = this.editStockResolver(this.stockMonitor);\n    }\n\n\n    closeOverlay() {\n        this.isEditingStock = false;\n        this.editStock = null;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport { inject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-fetch-client';\nimport 'whatwg-fetch';\n\n//Configure Bluebird Promises.\nPromise.config({\n    longStackTraces: environment.debug,\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nexport function configure(aurelia) {\n    aurelia.use\n        .standardConfiguration()\n        .feature('resources');\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n\n    let http = new HttpClient();\n    http.configure(config => {\n        config\n            .useStandardConfiguration()\n\n        //.withBaseUrl('http://localhost:64089/api/');\n        .withBaseUrl('http://thegoodorganiserwebapi.azurewebsites.net/api/');\n    });\n\n    aurelia.container.registerInstance(HttpClient, http);\n\n    aurelia.start().then(() => aurelia.setRoot());\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { inject, Factory } from 'aurelia-dependency-injection';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { PersonNeedList } from './personNeedList';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UpdateDataEvent } from '../resources/events/UpdateDataEvent';\r\n\r\nimport 'whatwg-fetch';\r\n\r\n@inject(HttpClient, EventAggregator, Factory.of(PersonNeedList))\r\nexport class EditOrder {\r\n    constructor(http, eventAggregator, personNeedsResolver, app, orderId, orderList) {\r\n        this.http = http;\r\n        this.eventAggregator = eventAggregator;\r\n        this.app = app;\r\n        this.orderId = orderId;\r\n        this.orderList = orderList;\r\n        this.personNeeds = personNeedsResolver(orderId, this);\r\n        this.availability = 'Loading...';\r\n        this.eventAggregator.subscribe(UpdateDataEvent, () => {\r\n            this.updateOrder();\r\n            this.checkOrderAvailability();\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.updateOrder();\r\n        this.checkOrderAvailability();\r\n    }\r\n\r\n\r\n\r\n    updateOrder() {\r\n        if (this.orderId !== 0) {\r\n            this.http.fetch('order/' + this.orderId)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.order = data;\r\n                });\r\n        }\r\n    }\r\n\r\n    checkOrderAvailability() {\r\n        if (this.orderId !== 0) {\r\n            this.http.fetch('order/checkavailability/' + this.orderId)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data === true) {\r\n                        this.availability = 'Available';\r\n                    } else {\r\n                        this.availability = 'Not Available';\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    saveOrder() {\r\n        var actionUrl;\r\n        if (this.orderId !== 0) {\r\n            actionUrl = 'order/update';\r\n        } else {\r\n            actionUrl = 'order/insert';\r\n        }\r\n\r\n        this.http.fetch(actionUrl, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                dataType: \"json\",\r\n                method: \"POST\",\r\n                body: JSON.stringify(this.order)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.order = data;\r\n                this.orderId = data.Id;\r\n                this.personNeeds.orderId = data.Id;\r\n                this.eventAggregator.publish(new UpdateDataEvent());\r\n            });\r\n\r\n    }\r\n\r\n    deleteOrder() {\r\n        this.http.fetch('order/delete/' + this.orderId, {\r\n                method: \"DELETE\"\r\n            })\r\n            .then(() => {\r\n                this.app.closeOrder();\r\n                this.eventAggregator.publish(new UpdateDataEvent());\r\n            });\r\n    }\r\n\r\n    closeThisOrder() {\r\n        this.http.fetch('order/close/' + this.orderId)\r\n            .then(() => {\r\n                this.app.closeOrder();\r\n                this.eventAggregator.publish(new UpdateDataEvent());\r\n            });\r\n    }\r\n\r\n    markAsReady() {\r\n        this.http.fetch('order/use/' + this.orderId)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data !== 'Ok') {\r\n                    this.processionError = data;\r\n                } else {\r\n                    this.eventAggregator.publish(new UpdateDataEvent());\r\n                }\r\n            });\r\n    }\r\n}","import { inject, Factory } from 'aurelia-dependency-injection';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UpdateDataEvent } from '../resources/events/UpdateDataEvent';\r\nimport 'whatwg-fetch';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class OrderList {\r\n    constructor(http, eventAggregator) {\r\n        this.http = http;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(UpdateDataEvent, () => {\r\n            this.updateOrderList();\r\n        });\r\n    }\r\n\r\n    updateOrderList() {\r\n        return this.http.fetch('order')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.orders = [];\r\n                this.orders = data;\r\n            });\r\n    }\r\n\r\n    attached() {\r\n        this.updateOrderList();\r\n    }\r\n\r\n    filterFunc(searchExpression, orderItem) {\r\n\r\n        let itemCamp = orderItem.Camp === null ? '' : orderItem.Camp.toUpperCase();\r\n        let itemReference = orderItem.ReferenceCode === null ? '' : orderItem.ReferenceCode.toUpperCase();\r\n        let itemReceiverName = orderItem.ReceiverName === null ? '' : orderItem.ReceiverName.toUpperCase();\r\n        let itemState = orderItem.State === null ? '' : orderItem.State.toUpperCase();\r\n\r\n        searchExpression = searchExpression.toUpperCase();\r\n        var searchParts = searchExpression.split(' ');\r\n\r\n        var foundSearchParts = [];\r\n        searchParts.forEach(function(searchPart) {\r\n            if (itemReference.indexOf(searchPart) > -1) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemCamp.indexOf(searchPart) > -1) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemReceiverName.indexOf(searchPart) > -1) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemState.indexOf(searchPart) > -1) {\r\n                foundSearchParts.push(searchPart);\r\n            }\r\n        }, this);\r\n\r\n\r\n        return searchParts.length == foundSearchParts.length;\r\n    }\r\n\r\n    containsString(source, searchString) {\r\n        return (source + '').indexOf(searchString + '') !== -1;\r\n    }\r\n}","import { inject, Factory } from 'aurelia-dependency-injection';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UpdateDataEvent } from '../resources/events/UpdateDataEvent';\r\nimport 'whatwg-fetch';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class PersonNeedList {\r\n    constructor(http, eventAggregator, orderId, editOrder) {\r\n        this.editOrder = editOrder;\r\n        this.http = http;\r\n        this.eventAggregator = eventAggregator;\r\n        this.orderId = orderId;\r\n        this.shoeSizes = this.getShoeSizes(25, 55);\r\n        this.clothSizes = ['XS', 'S', 'M', 'L', 'XL'];\r\n        this.eventAggregator.subscribe(UpdateDataEvent, () => {\r\n            this.updateNeedsList();\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.updateNeedsList();\r\n    }\r\n\r\n\r\n    updateNeedsList() {\r\n        return this.http.fetch('need/order/' + this.orderId)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.needs = [];\r\n                this.needs = data;\r\n            });\r\n    }\r\n\r\n    addNeed() {\r\n        if (this.needs.length < 6) {\r\n            this.needs.push(new Object({\r\n                Id: 0,\r\n                Gender: 'None',\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    saveNeed(need) {\r\n        var address = '';\r\n        if (need.Id === 0) {\r\n            address = 'need/insert/' + this.orderId;\r\n        } else {\r\n            address = 'need/update';\r\n        }\r\n\r\n        this.http.fetch(address, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                dataType: \"json\",\r\n                method: \"POST\",\r\n                body: JSON.stringify(need)\r\n            })\r\n            .then(response => response.json())\r\n            .then(() => {\r\n                this.eventAggregator.publish(new UpdateDataEvent());\r\n            });\r\n    }\r\n\r\n    deleteNeed(need) {\r\n        this.http.fetch('need/delete/' + need.Id, {\r\n            method: \"DELETE\"\r\n        }).then(() => {\r\n            this.updateNeedsList();\r\n        });\r\n    }\r\n\r\n    getShoeSizes(start, end) {\r\n        var sizes = [];\r\n        for (var i = start; i < end; i++) {\r\n            sizes.push(i);\r\n        }\r\n        return sizes;\r\n    }\r\n}","import { inject, Factory } from 'aurelia-framework';\r\nimport { StockMonitor } from './stockMonitor';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UpdateDataEvent } from '../resources/events/UpdateDataEvent';\r\nimport 'whatwg-fetch';\r\n\r\n@inject(HttpClient, EventAggregator, Factory.of(StockMonitor))\r\nexport class EditStock {\r\n    constructor(http, eventAggregator, stockMonitorResolver, originalStockMonitor) {\r\n        this.http = http;\r\n        this.eventAggregator = eventAggregator;\r\n        this.originalStockMonitor = originalStockMonitor;\r\n        this.stockMonitor = stockMonitorResolver();\r\n        this.shoeSizes = this.getShoeSizes(25, 55);\r\n        this.clothSizes = ['XS', 'S', 'M', 'L', 'XL'];\r\n        this.typeOfGood = 'Shoes';\r\n        this.shoeSize = 0;\r\n        this.clothSize = 'XS';\r\n        this.gender = 'Male';\r\n        this.amount = 0;\r\n\r\n    }\r\n\r\n    closeOrder() {\r\n        this.isEditingOrder = false;\r\n        this.editOrder = null;\r\n    }\r\n\r\n    getShoeSizes(start, end) {\r\n        var sizes = [];\r\n        for (var i = start; i < end; i++) {\r\n            sizes.push(i);\r\n        }\r\n        return sizes;\r\n    }\r\n\r\n    addToStock() {\r\n        this.modifyStock(this.amount);\r\n    }\r\n\r\n    removeFromStock() {\r\n        this.modifyStock(-1 * this.amount);\r\n    }\r\n\r\n    modifyStock(amount) {\r\n        var url = 'stock/modify?' +\r\n            'type=' + this.typeOfGood + '&' +\r\n            'amount=' + amount + '&' +\r\n            'clothSize=' + this.clothSize + '&' +\r\n            'shoeSize=' + this.shoeSize + '&' +\r\n            'gender=' + this.gender;\r\n\r\n        this.http.fetch(url).then(() => {\r\n            this.eventAggregator.publish(new UpdateDataEvent());\r\n        });\r\n    }\r\n\r\n\r\n}","import { inject, Factory } from 'aurelia-dependency-injection';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UpdateDataEvent } from '../resources/events/UpdateDataEvent';\r\nimport 'whatwg-fetch';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class StockMonitor {\r\n    constructor(http, eventAggregator) {\r\n        this.eventAggregator = eventAggregator;\r\n        this.http = http;\r\n        this.stockFilter = \"\";\r\n        this.test = \"\";\r\n        this.eventAggregator.subscribe(UpdateDataEvent, () => {\r\n            this.updateList();\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.updateList();\r\n    }\r\n\r\n    updateList() {\r\n        return this.http.fetch('stock')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.stockInfos = data;\r\n            });\r\n    }\r\n\r\n    filterFunc(searchExpression, stockItem) {\r\n\r\n        let itemType = stockItem.Type.toUpperCase();\r\n        let itemGender = stockItem.Gender.toUpperCase();\r\n        let itemAltType;\r\n        let itemManWoman;\r\n        let itemBoyGirl;\r\n        let itemSize;\r\n\r\n        if (itemType === 'SHOES') {\r\n            itemSize = stockItem.ShoeSize;\r\n            itemAltType = 'SHOE';\r\n        } else if (itemType !== 'HYGIENE') {\r\n            itemSize = stockItem.ClothSize.toUpperCase();\r\n        }\r\n        if (itemType === 'PANTS') {\r\n            itemAltType = 'PANT';\r\n        }\r\n        if (itemType === 'TOP') {\r\n            itemAltType = 'TOPS';\r\n        }\r\n        if (itemType === 'JACKET') {\r\n            itemAltType = 'JACKETS';\r\n        }\r\n        if (itemType === 'HYGIENE') {\r\n            itemAltType = 'HYGIENES';\r\n        }\r\n\r\n\r\n        if (itemGender === 'MALE') {\r\n            itemManWoman = 'MAN';\r\n            itemBoyGirl = 'BOY';\r\n        } else {\r\n            itemManWoman = 'WOMAN';\r\n            itemBoyGirl = 'GIRL';\r\n        }\r\n\r\n        searchExpression = searchExpression.toUpperCase();\r\n        var searchParts = searchExpression.split(' ');\r\n\r\n        var foundSearchParts = [];\r\n        searchParts.forEach(function(searchPart) {\r\n            if (itemType == searchPart) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemAltType == searchPart) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemGender == searchPart) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemManWoman == searchPart) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemBoyGirl == searchPart) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemType == 'SHOES' && itemSize == searchPart) {\r\n                foundSearchParts.push(searchPart);\r\n            } else if (itemType !== 'HYGIENE' && itemType !== 'SHOES' && (itemSize + '').indexOf(searchPart) > -1) {\r\n                foundSearchParts.push(searchPart);\r\n            }\r\n        }, this);\r\n\r\n\r\n        return searchParts.length == foundSearchParts.length;\r\n\r\n    }\r\n\r\n}","import moment from 'moment';\r\n\r\nexport class DateFormatValueConverter {\r\n    toView(value) {\r\n        return moment(value).format('DD.MM.YYYY');\r\n    }\r\n}","export class FilterValueConverter {\r\n    toView(array, searchTerm, filterFunc) {\r\n        if (array === undefined) {\r\n            return [];\r\n        }\r\n        if (searchTerm === undefined) {\r\n            return array;\r\n        }\r\n\r\n        searchTerm = searchTerm.trim();\r\n\r\n        return array.filter((item) => {\r\n            let matches = searchTerm && searchTerm.length > 0 ? filterFunc(searchTerm, item) : true;\r\n            return matches;\r\n        });\r\n    }\r\n}","export class UpdateDataEvent {\r\n    constructor() {\r\n\r\n    }\r\n}"],"sourceRoot":"../src"}